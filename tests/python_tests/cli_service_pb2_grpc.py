# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import cli_service_pb2 as cli__service__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in cli_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class CliServiceStub(object):
    """-- RPCs ----

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCoordinators = channel.unary_unary(
                '/fdbcli_lib.CliService/GetCoordinators',
                request_serializer=cli__service__pb2.GetCoordinatorsRequest.SerializeToString,
                response_deserializer=cli__service__pb2.GetCoordinatorsReply.FromString,
                _registered_method=True)
        self.ChangeCoordinators = channel.unary_unary(
                '/fdbcli_lib.CliService/ChangeCoordinators',
                request_serializer=cli__service__pb2.ChangeCoordinatorsRequest.SerializeToString,
                response_deserializer=cli__service__pb2.ChangeCoordinatorsReply.FromString,
                _registered_method=True)
        self.Configure = channel.unary_unary(
                '/fdbcli_lib.CliService/Configure',
                request_serializer=cli__service__pb2.ConfigureRequest.SerializeToString,
                response_deserializer=cli__service__pb2.ConfigureReply.FromString,
                _registered_method=True)
        self.GetOptions = channel.unary_unary(
                '/fdbcli_lib.CliService/GetOptions',
                request_serializer=cli__service__pb2.GetOptionsRequest.SerializeToString,
                response_deserializer=cli__service__pb2.GetOptionsReply.FromString,
                _registered_method=True)
        self.SetOptions = channel.unary_unary(
                '/fdbcli_lib.CliService/SetOptions',
                request_serializer=cli__service__pb2.SetOptionsRequest.SerializeToString,
                response_deserializer=cli__service__pb2.SetOptionsReply.FromString,
                _registered_method=True)
        self.GetReadVersion = channel.unary_unary(
                '/fdbcli_lib.CliService/GetReadVersion',
                request_serializer=cli__service__pb2.GetReadVersionRequest.SerializeToString,
                response_deserializer=cli__service__pb2.GetReadVersionReply.FromString,
                _registered_method=True)
        self.GetStatus = channel.unary_unary(
                '/fdbcli_lib.CliService/GetStatus',
                request_serializer=cli__service__pb2.GetStatusRequest.SerializeToString,
                response_deserializer=cli__service__pb2.GetStatusReply.FromString,
                _registered_method=True)
        self.GetWorkers = channel.unary_unary(
                '/fdbcli_lib.CliService/GetWorkers',
                request_serializer=cli__service__pb2.GetWorkersRequest.SerializeToString,
                response_deserializer=cli__service__pb2.GetWorkersReply.FromString,
                _registered_method=True)
        self.Include = channel.unary_unary(
                '/fdbcli_lib.CliService/Include',
                request_serializer=cli__service__pb2.IncludeRequest.SerializeToString,
                response_deserializer=cli__service__pb2.IncludeReply.FromString,
                _registered_method=True)
        self.Exclude = channel.unary_unary(
                '/fdbcli_lib.CliService/Exclude',
                request_serializer=cli__service__pb2.ExcludeRequest.SerializeToString,
                response_deserializer=cli__service__pb2.ExcludeReply.FromString,
                _registered_method=True)
        self.ExcludeStatus = channel.unary_unary(
                '/fdbcli_lib.CliService/ExcludeStatus',
                request_serializer=cli__service__pb2.ExcludeStatusRequest.SerializeToString,
                response_deserializer=cli__service__pb2.ExcludeStatusReply.FromString,
                _registered_method=True)
        self.Kill = channel.unary_unary(
                '/fdbcli_lib.CliService/Kill',
                request_serializer=cli__service__pb2.KillRequest.SerializeToString,
                response_deserializer=cli__service__pb2.KillReply.FromString,
                _registered_method=True)


class CliServiceServicer(object):
    """-- RPCs ----

    """

    def GetCoordinators(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeCoordinators(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Configure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetOptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReadVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Include(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Exclude(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExcludeStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Kill(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CliServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCoordinators': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCoordinators,
                    request_deserializer=cli__service__pb2.GetCoordinatorsRequest.FromString,
                    response_serializer=cli__service__pb2.GetCoordinatorsReply.SerializeToString,
            ),
            'ChangeCoordinators': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeCoordinators,
                    request_deserializer=cli__service__pb2.ChangeCoordinatorsRequest.FromString,
                    response_serializer=cli__service__pb2.ChangeCoordinatorsReply.SerializeToString,
            ),
            'Configure': grpc.unary_unary_rpc_method_handler(
                    servicer.Configure,
                    request_deserializer=cli__service__pb2.ConfigureRequest.FromString,
                    response_serializer=cli__service__pb2.ConfigureReply.SerializeToString,
            ),
            'GetOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOptions,
                    request_deserializer=cli__service__pb2.GetOptionsRequest.FromString,
                    response_serializer=cli__service__pb2.GetOptionsReply.SerializeToString,
            ),
            'SetOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.SetOptions,
                    request_deserializer=cli__service__pb2.SetOptionsRequest.FromString,
                    response_serializer=cli__service__pb2.SetOptionsReply.SerializeToString,
            ),
            'GetReadVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReadVersion,
                    request_deserializer=cli__service__pb2.GetReadVersionRequest.FromString,
                    response_serializer=cli__service__pb2.GetReadVersionReply.SerializeToString,
            ),
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=cli__service__pb2.GetStatusRequest.FromString,
                    response_serializer=cli__service__pb2.GetStatusReply.SerializeToString,
            ),
            'GetWorkers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkers,
                    request_deserializer=cli__service__pb2.GetWorkersRequest.FromString,
                    response_serializer=cli__service__pb2.GetWorkersReply.SerializeToString,
            ),
            'Include': grpc.unary_unary_rpc_method_handler(
                    servicer.Include,
                    request_deserializer=cli__service__pb2.IncludeRequest.FromString,
                    response_serializer=cli__service__pb2.IncludeReply.SerializeToString,
            ),
            'Exclude': grpc.unary_unary_rpc_method_handler(
                    servicer.Exclude,
                    request_deserializer=cli__service__pb2.ExcludeRequest.FromString,
                    response_serializer=cli__service__pb2.ExcludeReply.SerializeToString,
            ),
            'ExcludeStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.ExcludeStatus,
                    request_deserializer=cli__service__pb2.ExcludeStatusRequest.FromString,
                    response_serializer=cli__service__pb2.ExcludeStatusReply.SerializeToString,
            ),
            'Kill': grpc.unary_unary_rpc_method_handler(
                    servicer.Kill,
                    request_deserializer=cli__service__pb2.KillRequest.FromString,
                    response_serializer=cli__service__pb2.KillReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'fdbcli_lib.CliService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('fdbcli_lib.CliService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CliService(object):
    """-- RPCs ----

    """

    @staticmethod
    def GetCoordinators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fdbcli_lib.CliService/GetCoordinators',
            cli__service__pb2.GetCoordinatorsRequest.SerializeToString,
            cli__service__pb2.GetCoordinatorsReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ChangeCoordinators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fdbcli_lib.CliService/ChangeCoordinators',
            cli__service__pb2.ChangeCoordinatorsRequest.SerializeToString,
            cli__service__pb2.ChangeCoordinatorsReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Configure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fdbcli_lib.CliService/Configure',
            cli__service__pb2.ConfigureRequest.SerializeToString,
            cli__service__pb2.ConfigureReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fdbcli_lib.CliService/GetOptions',
            cli__service__pb2.GetOptionsRequest.SerializeToString,
            cli__service__pb2.GetOptionsReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fdbcli_lib.CliService/SetOptions',
            cli__service__pb2.SetOptionsRequest.SerializeToString,
            cli__service__pb2.SetOptionsReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetReadVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fdbcli_lib.CliService/GetReadVersion',
            cli__service__pb2.GetReadVersionRequest.SerializeToString,
            cli__service__pb2.GetReadVersionReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fdbcli_lib.CliService/GetStatus',
            cli__service__pb2.GetStatusRequest.SerializeToString,
            cli__service__pb2.GetStatusReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWorkers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fdbcli_lib.CliService/GetWorkers',
            cli__service__pb2.GetWorkersRequest.SerializeToString,
            cli__service__pb2.GetWorkersReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Include(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fdbcli_lib.CliService/Include',
            cli__service__pb2.IncludeRequest.SerializeToString,
            cli__service__pb2.IncludeReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Exclude(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fdbcli_lib.CliService/Exclude',
            cli__service__pb2.ExcludeRequest.SerializeToString,
            cli__service__pb2.ExcludeReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExcludeStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fdbcli_lib.CliService/ExcludeStatus',
            cli__service__pb2.ExcludeStatusRequest.SerializeToString,
            cli__service__pb2.ExcludeStatusReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Kill(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fdbcli_lib.CliService/Kill',
            cli__service__pb2.KillRequest.SerializeToString,
            cli__service__pb2.KillReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
